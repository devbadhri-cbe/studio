
'use client';

import * as React from 'react';
import { Share2, Printer } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { useToast } from '@/hooks/use-toast';
import { useApp } from '@/context/app-context';

export function ShareButton() {
  const { toast } = useToast();
  const { profile } = useApp();
  const [isShareSupported, setIsShareSupported] = React.useState(false);

  React.useEffect(() => {
    if (typeof navigator !== 'undefined' && navigator.share) {
      setIsShareSupported(true);
    }
  }, []);

  const handleShare = async () => {
    const shareData = {
      title: `${profile.name}'s Health Report`,
      text: `Here is the health report for ${profile.name}, generated by Health Guardian.`,
      url: window.location.href,
    };

    if (isShareSupported) {
        try {
            await navigator.share(shareData);
            toast({
                title: 'Report Shared',
                description: 'Your health report has been shared successfully.',
            });
        } catch (err: any) {
            // Check if the error is an AbortError, which occurs when the user cancels the share dialog.
            // In that case, we can safely ignore it.
            if (err.name !== 'AbortError') {
              console.error('Share failed:', err);
              toast({
                variant: 'destructive',
                title: 'Sharing Failed',
                description: 'Could not share the report at this time.',
              });
            }
        }
    } else {
        // Fallback for browsers that don't support the Web Share API
        window.print();
    }
  };

  return (
    <Button onClick={handleShare} variant="outline">
      {isShareSupported ? <Share2 className="mr-2 h-4 w-4" /> : <Printer className="mr-2 h-4 w-4" />}
      {isShareSupported ? 'Share' : 'Print / Save PDF'}
    </Button>
  );
}
