
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if the user is authenticated (is a doctor)
    function isDoctor() {
      return request.auth != null;
    }
    
    // Function to check if the user can access a specific patient's data
    function canAccessPatient(patientId) {
      // Allow access if the user is a doctor OR if they are an unauthenticated
      // user trying to access the document via its direct path. The 'exists'
      // check ensures that the document they are trying to access is valid.
      return isDoctor() || (request.auth == null && exists(/databases/$(database)/documents/patients/$(patientId)));
    }

    match /patients/{patientId} {
      // Allow read and write access to the main patient document
      // if the user is a doctor.
      allow read, write: if isDoctor();
      
      // Allow unauthenticated patients to get and update their own document.
      allow get, update: if request.auth == null;

      // This is the critical rule for the chat subcollection.
      // It allows reading (list) and creating messages only if the user
      // has access to the parent patient document, which is verified by
      // the canAccessPatient function.
      match /chat/{messageId} {
        allow read, create: if canAccessPatient(patientId);
      }
    }
  }
}
